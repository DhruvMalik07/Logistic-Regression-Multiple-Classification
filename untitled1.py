# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DxaSxRcQVfX6cUakwTbh2J2DIaEe7m4D
"""

#Multiple Classification
from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt
from sklearn.datasets import load_digits

#below line automatically loads required data set
#scikit-learn (The Digit Dataset)
digits = load_digits()

dir(digits)

digits.data[0]

plt.gray()
plt.matshow(digits.images[8])

from IPython.core.prefilter import PrefilterError
plt.gray()
for i in range(5):
    plt.matshow(digits.images[i])



digits.target[0:5]

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test = train_test_split(digits.data, digits.target, test_size=0.2)

len(x_train)

len(x_test)

from sklearn.linear_model import LogisticRegression
model = LogisticRegression()

model.fit(x_train,y_train)

model.score(x_test,y_test)
#Accuracy

#choose some random sample
plt.matshow(digits.images[67])

digits.target[67]

model.predict([digits.data[67]])

# We don't know at which places values are diff
# So create a Confusion Matrix to analyse results
y_predicted=model.predict(x_test)
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test,y_predicted)
cm

import seaborn as sn
plt.figure(figsize = (10,7))
sn.heatmap(cm,annot=True)
plt.xlabel('Predicted',size=25)
plt.ylabel('Truth',size=25)